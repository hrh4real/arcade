# -*- coding: utf-8 -*-
"""rps.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/14kiqovq-24S9nh-4NP3KHPzU7nby2voo
"""

import sys
import random  # for computer choice
from enum import Enum


def rps(name='PlayerOne'):

    game_count = 0
    player_wins = 0
    python_wins = 0

    def play_rps():

        nonlocal player_wins
        nonlocal python_wins
        nonlocal name

        class RPS(Enum):
            ROCK = 1
            PAPER = 2
            SCISSORS = 3  # All caps means constant variables

        playerchoice = input(
            f"\n{name}, please enter....\n1 for Rock, \n2 for Paper, or \n3 for Scissors : \n\n")

        if playerchoice not in ["1", "2", "3"]:
            print(f"{name}, please choose between 1, 2, or 3")
            return play_rps()
        player = int(playerchoice)

        # if player < 1 or player > 3 :
        #     sys.exit("You must enter a valid option.")

        # computer is randomly selecting between the string
        computerchoice = random.choice("123")
        computer = int(computerchoice)

        # print("You chose " + playerchoice + ".") # standard method
        # alternate using class
        print(f"\n{name}, you chose {str(RPS(player)).replace('RPS.', '')}.")
        print(f"\nComputer chose {str(RPS(computer)).replace('RPS.', '')}.\n")

        def decide_winner(player, computer):
            nonlocal player_wins
            nonlocal python_wins
            nonlocal name
            if player == computer:
                return "ü•∏ Draw !"
            elif player == 1 and computer == 3:
                player_wins += 1
                return f"ü•≥ {name}, you Won"
            elif player == 2 and computer == 1:
                player_wins += 1
                return f"ü•≥ {name}, you Won"
            elif player == 3 and computer == 2:
                player_wins += 1
                return f"ü•≥ {name}, you Win"
            else:
                python_wins += 1
                return f"üêç Python wins!\n Sorry, {name} :("

        game_result = decide_winner(player, computer)

        print(game_result)

        nonlocal game_count
        # nonlocal name
        game_count += 1

        print(f"\nGame Count  : {game_count}")
        print(f"\n{name}'s Wins :  {player_wins}")
        print(f"\nPython Wins :  {python_wins}")

        print(f"\nPlay Again, {name}?")
        while True:
            playagain = input("\nY for Yes or \nQ to Quit \n")
            if playagain.lower() not in ["y", "q"]:
                continue
            else:
                break
        if playagain.lower() == "y":
            return play_rps()
        else:
            print("\nthanks for playing !\n")
            if __name__ == '__main__':
                sys.exit(f"Bye {name}!")
            else:
                return
            # playagain = False
    return play_rps


if __name__ == "__main__":
    import argparse as ag
    #  import msilib

    parser = ag.ArgumentParser(
        description="Provides a personalized Game Experience."
    )

    parser.add_argument(
        "-n", "--name", metavar="name",
        required=True, help="The name of the person playing the game."
    )

    # parser.add_argument(
    #     "-l", "--lang", metavar="language",
    #     required=True, choices=["English", "Spanish", "French"],
    #     help="The Language of the greeting."
    # )

    args = parser.parse_args()
    rock_paper_scissors = rps(args.name)
    rock_paper_scissors()  # added as module